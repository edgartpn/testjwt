// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace APINetCore.Models;

public partial class MembershipContext : DbContext
{
    //public MembershipContext()
    //{
    //}
 
    public virtual DbSet<Imex_Chassis> Imex_Chassis { get; set; }

    public virtual DbSet<Imex_Terminal> Imex_Terminal { get; set; }

    public virtual DbSet<aspnet_Membership> aspnet_Membership { get; set; }

    public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }

    public virtual DbSet<cat_maritimeshippers> cat_maritimeshippers { get; set; }

  // protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warn//ing To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
    //    => optionsBuilder.UseSqlServer("Data Source=SHGDLSQL01\\SQLISTENERDEV;Initial Catalog=Membership;Persist Security Info=True;User ID=simexweb;Password=s1m3xw3b;Encrypt=True;Trust Server Certificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.UseCollation("Modern_Spanish_CI_AI");

        modelBuilder.Entity<Imex_Chassis>(entity =>
        {
            entity.HasKey(e => e.ChassisId).HasName("PK__Imex_Chassis__01892CED");

            entity.HasIndex(e => e.Chassis, "Idx_Imex_Chassis_C2")
                .IsUnique()
                .HasFillFactor(90);

            entity.HasIndex(e => e.ChassisId, "Idx_Imex_Chassis_Idx1").HasFillFactor(90);

            entity.Property(e => e.Chassis)
                .HasMaxLength(13)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Imex_Terminal>(entity =>
        {
            entity.HasKey(e => e.TerminalId).HasName("PK__Imex_Terminal__656C112C");

            entity.Property(e => e.TerminalId).ValueGeneratedNever();
            entity.Property(e => e.Codigo)
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.Descripcion).HasMaxLength(256);
            entity.Property(e => e.EmailOperaciones)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.EnviaSAPMyR).HasDefaultValue(false);
            entity.Property(e => e.Latitud)
                .HasDefaultValue(0.0m)
                .HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Longitud)
                .HasDefaultValue(0.0m)
                .HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Recarga).HasDefaultValue(false);
            entity.Property(e => e.RutaServerLocal)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.SIMEXPRO).HasDefaultValue(false);
            entity.Property(e => e.SIMEX_API).HasDefaultValue(false);
            entity.Property(e => e.SegmentoRed)
                .HasMaxLength(255)
                .IsUnicode(false);
            entity.Property(e => e.Sidopla).HasDefaultValue(false);
            entity.Property(e => e.Splc)
                .HasMaxLength(8)
                .IsUnicode(false);
            entity.Property(e => e.Trasvase).HasDefaultValue(false);
        });

        modelBuilder.Entity<aspnet_Membership>(entity =>
        {
            entity.HasKey(e => e.UserId)
                .HasName("PK__aspnet_Membershi__145C0A3F")
                .IsClustered(false);

            entity.HasIndex(e => new { e.ApplicationId, e.LoweredEmail }, "aspnet_Membership_index")
                .IsClustered()
                .HasFillFactor(90);

            entity.Property(e => e.UserId).ValueGeneratedNever();
            entity.Property(e => e.Comment).HasColumnType("ntext");
            entity.Property(e => e.CreateDate).HasColumnType("datetime");
            entity.Property(e => e.Email).HasMaxLength(256);
            entity.Property(e => e.FailedPasswordAnswerAttemptWindowStart).HasColumnType("datetime");
            entity.Property(e => e.FailedPasswordAttemptWindowStart).HasColumnType("datetime");
            entity.Property(e => e.LastLockoutDate).HasColumnType("datetime");
            entity.Property(e => e.LastLoginDate).HasColumnType("datetime");
            entity.Property(e => e.LastPasswordChangedDate).HasColumnType("datetime");
            entity.Property(e => e.LoweredEmail).HasMaxLength(256);
            entity.Property(e => e.MobilePIN).HasMaxLength(16);
            entity.Property(e => e.Password)
                .IsRequired()
                .HasMaxLength(128);
            entity.Property(e => e.PasswordAnswer).HasMaxLength(128);
            entity.Property(e => e.PasswordQuestion).HasMaxLength(256);
            entity.Property(e => e.PasswordSalt)
                .IsRequired()
                .HasMaxLength(128);

            entity.HasOne(d => d.User).WithOne(p => p.aspnet_Membership)
                .HasForeignKey<aspnet_Membership>(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__aspnet_Me__UserI__164452B1");
        });

        modelBuilder.Entity<aspnet_Users>(entity =>
        {
            entity.HasKey(e => e.UserId)
                .HasName("PK__aspnet_Users__0425A276")
                .IsClustered(false);

            entity.HasIndex(e => new { e.ApplicationId, e.LoweredUserName }, "aspnet_Users_Index")
                .IsUnique()
                .IsClustered()
                .HasFillFactor(90);

            entity.HasIndex(e => new { e.ApplicationId, e.LastActivityDate }, "aspnet_Users_Index2").HasFillFactor(90);

            entity.HasIndex(e => e.UserName, "idx_aspnet_Users_UserName");

            entity.Property(e => e.UserId).HasDefaultValueSql("(newid())");
            entity.Property(e => e.LastActivityDate).HasColumnType("datetime");
            entity.Property(e => e.LastName).HasMaxLength(60);
            entity.Property(e => e.LoweredUserName)
                .IsRequired()
                .HasMaxLength(256);
            entity.Property(e => e.MobileAlias)
                .HasMaxLength(16)
                .HasDefaultValueSql("(NULL)");
            entity.Property(e => e.Name).HasMaxLength(60);
            entity.Property(e => e.UserName)
                .IsRequired()
                .HasMaxLength(256);
        });

        modelBuilder.Entity<cat_maritimeshippers>(entity =>
        {
            entity.HasKey(e => e.MaritimeShippersId).HasName("PK__cat_maritimeship__050FA50E");

            entity.Property(e => e.MaritimeShippersId).ValueGeneratedNever();
            entity.Property(e => e.EsRemolqueCrossBorder).HasDefaultValue(false);
            entity.Property(e => e.FechaActualizacion).HasColumnType("datetime");
            entity.Property(e => e.FechaAlta).HasColumnType("datetime");
            entity.Property(e => e.MaritimeShippersDescription).HasMaxLength(256);
            entity.Property(e => e.Notificacion24HCrossBorder).HasDefaultValue(false);
            entity.Property(e => e.email).HasMaxLength(1000);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}